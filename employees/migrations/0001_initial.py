# Generated by Django 5.0.1 on 2024-02-17 08:26

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField(blank=True, null=True, verbose_name='appointment date')),
                ('appointment_time', models.TimeField(blank=True, null=True, verbose_name='appointment time')),
                ('appointment_type', models.CharField(blank=True, max_length=30, null=True, verbose_name='appointment type')),
                ('appointment_reason', models.TextField(blank=True, null=True, verbose_name='appointment reason')),
                ('appointment_status', models.CharField(blank=True, default='Pending', max_length=30, null=True, verbose_name='appointment status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'appointment',
                'verbose_name_plural': 'appointments',
                'ordering': ['-appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='date')),
                ('time_in', models.TimeField(default=datetime.datetime.now, verbose_name='time in')),
                ('time_out', models.TimeField(default=datetime.datetime.now, verbose_name='time out')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'attendance',
                'verbose_name_plural': 'attendances',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='bank name')),
                ('account_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='account number')),
                ('pension_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='pension ID')),
                ('tax_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='tax ID')),
                ('branch', models.CharField(blank=True, max_length=30, null=True, verbose_name='branch')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'bank Detail',
                'verbose_name_plural': 'bank Details',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=100, verbose_name='institution')),
                ('course', models.CharField(max_length=100, verbose_name='course')),
                ('qualification', models.CharField(max_length=100, verbose_name='qualification')),
                ('start_date', models.DateField(default=datetime.datetime.now, verbose_name='start date')),
                ('end_date', models.DateField(default=datetime.datetime.now, verbose_name='end date')),
                ('grade', models.CharField(blank=True, max_length=10, null=True, verbose_name='grade')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('certificate', models.FileField(blank=True, null=True, upload_to='employees/education_certificates/', verbose_name='certificate')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'education',
                'verbose_name_plural': 'education History',
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Middle name')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('gender', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True, verbose_name='Gender')),
                ('marital_status', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed'), ('Separated', 'Separated'), ('Other', 'Other')], max_length=15, null=True, verbose_name='Marital status')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('nationality', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nationality')),
                ('state_of_origin', models.CharField(blank=True, max_length=30, null=True, verbose_name='State of origin')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone number')),
                ('employee_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Employee ID')),
                ('department', models.CharField(max_length=100, verbose_name='Department/division')),
                ('job_role', models.CharField(blank=True, max_length=100, null=True, verbose_name='Job role')),
                ('joining_date', models.DateField(blank=True, default='2000-01-01', null=True, verbose_name='Joining date')),
                ('employment_type', models.CharField(choices=[('--Select--', '--Select--'), ('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Contract', 'Contract'), ('Intern', 'Intern'), ('Volunteer', 'Volunteer'), ('Temporary', 'Temporary'), ('Seasonal', 'Seasonal'), ('Freelance', 'Freelance'), ('Remote', 'Remote'), ('Disabled', 'Disabled'), ('Other', 'Other')], max_length=100, verbose_name='Employment type')),
                ('employment_status', models.CharField(choices=[('--Select--', '--Select--'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Suspended', 'Suspended'), ('Terminated', 'Terminated'), ('Resigned', 'Resigned'), ('Retired', 'Retired'), ('Deceased', 'Deceased'), ('On Leave', 'On Leave'), ('On Training', 'On Training'), ('On Probation', 'On Probation'), ('Other', 'Other')], max_length=20, verbose_name='Employment status')),
                ('designation', models.CharField(choices=[('--Select--', '--Select--'), ('Employee', 'Employee'), ('Intern', 'Intern'), ('Trainee', 'Trainee'), ('Associate', 'Associate'), ('Assistant', 'Assistant'), ('Officer', 'Officer'), ('Analyst', 'Analyst'), ('Coordinator', 'Coordinator'), ('Specialist', 'Specialist'), ('Consultant', 'Consultant'), ('Advisor', 'Advisor'), ('Supervisor', 'Supervisor'), ('Manager', 'Manager'), ('Director', 'Director'), ('Executive', 'Executive'), ('President', 'President'), ('CEO', 'CEO'), ('CFO', 'CFO'), ('CTO', 'CTO'), ('CIO', 'CIO'), ('COO', 'COO'), ('Chairman', 'Chairman'), ('Board Member', 'Board Member'), ('Other', 'Other')], max_length=30, verbose_name='Designation')),
                ('level', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Entry-level', 'Entry-level'), ('Mid-level', 'Mid-level'), ('Senior-level', 'Senior-level'), ('Executive', 'Executive'), ('Top-level', 'Top-level'), ('Other', 'Other')], max_length=30, null=True, verbose_name='Level')),
                ('last_promotion_date', models.DateField(blank=True, null=True, verbose_name='Last promotion date')),
                ('next_promotion_date', models.DateField(blank=True, null=True, verbose_name='Next promotion date')),
                ('salary', models.IntegerField(blank=True, null=True, verbose_name='Salary')),
                ('emergency_contacts', models.TextField(null=True, verbose_name='Emergency contacts')),
                ('termination_resignation_date', models.DateField(blank=True, null=True, verbose_name='Date of termination/resignation')),
                ('highest_qualification', models.CharField(blank=True, max_length=100, null=True, verbose_name='Highest qualification')),
                ('highest_certificate', models.FileField(blank=True, null=True, upload_to='employees/highest_certificates/', verbose_name='Highest certificate')),
                ('employment_letter', models.FileField(blank=True, null=True, upload_to='employees/employment_letters/', verbose_name='Employment letter')),
                ('skills_qualifications', models.TextField(blank=True, null=True, verbose_name='Skills/qualifications')),
                ('next_of_kin_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of kin name')),
                ('next_of_kin_relationship', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Spouse', 'Spouse'), ('Child', 'Child'), ('Parent', 'Parent'), ('Sibling', 'Sibling'), ('Relative', 'Relative'), ('Friend', 'Friend'), ('Other', 'Other')], max_length=100, null=True, verbose_name='Next of kin relationship')),
                ('next_of_kin_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Next of kin phone number')),
                ('next_of_kin_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of kin address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('first_name', models.CharField(max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last name')),
                ('profile_picture', models.ImageField(blank=True, default='default_picture.png', null=True, upload_to='employees/', verbose_name='Profile picture')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=100, verbose_name='document name')),
                ('document', models.FileField(upload_to='employees/documents/', verbose_name='document')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
                'ordering': ['document_name', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Annual', 'Annual'), ('Sick', 'Sick'), ('Maternity', 'Maternity'), ('Paternity', 'Paternity'), ('Bereavement', 'Bereavement'), ('Compassionate', 'Compassionate'), ('Study', 'Study'), ('Unpaid', 'Unpaid'), ('Other', 'Other')], max_length=30, null=True, verbose_name='leave type')),
                ('leave_start_date', models.DateField(default=datetime.datetime.now, verbose_name='leave start date')),
                ('leave_end_date', models.DateField(default=datetime.datetime.now, verbose_name='leave end date')),
                ('leave_duration', models.IntegerField(default=0, verbose_name='leave duration')),
                ('days_left', models.IntegerField(default=0, verbose_name='remaining leave days')),
                ('is_leave_active', models.BooleanField(default=False)),
                ('leave_reason', models.TextField(verbose_name='leave reason')),
                ('leave_status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Cancelled', 'Cancelled'), ('Other', 'Other')], default='Pending', max_length=30, verbose_name='leave status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'leave',
                'verbose_name_plural': 'leaves',
                'ordering': ['-leave_start_date'],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(default='February', max_length=20, verbose_name='month')),
                ('year', models.IntegerField(default=2024, verbose_name='year')),
                ('basic_salary', models.IntegerField(default=0, verbose_name='basic salary')),
                ('housing_allowance', models.IntegerField(default=0, verbose_name='housing allowance')),
                ('transport_allowance', models.IntegerField(default=0, verbose_name='transport allowance')),
                ('feeding_allowance', models.IntegerField(default=0, verbose_name='feeding allowance')),
                ('utility_allowance', models.IntegerField(default=0, verbose_name='utility allowance')),
                ('other_allowance', models.IntegerField(default=0, verbose_name='other allowance')),
                ('total_allowance', models.IntegerField(default=0, verbose_name='total allowance')),
                ('tax', models.IntegerField(default=0, verbose_name='tax')),
                ('pension', models.IntegerField(default=0, verbose_name='pension')),
                ('loan', models.IntegerField(default=0, verbose_name='loan')),
                ('other_deductions', models.IntegerField(default=0, verbose_name='other deductions')),
                ('total_deductions', models.IntegerField(default=0, verbose_name='total deductions')),
                ('net_pay', models.IntegerField(default=0, verbose_name='net pay')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'payroll',
                'verbose_name_plural': 'payrolls',
                'ordering': ['-year', '-month'],
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance_rating', models.IntegerField(default=0, verbose_name='performance rating')),
                ('performance_review', models.TextField(verbose_name='performance review')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'performance',
                'verbose_name_plural': 'performances',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_title', models.CharField(max_length=100, verbose_name='training title')),
                ('training_provider', models.CharField(blank=True, max_length=100, null=True, verbose_name='training provider')),
                ('training_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='training location')),
                ('training_start_date', models.DateField(blank=True, null=True, verbose_name='training start date')),
                ('training_end_date', models.DateField(blank=True, null=True, verbose_name='training end date')),
                ('training_duration', models.IntegerField(blank=True, default=0, null=True, verbose_name='training duration')),
                ('training_description', models.TextField(blank=True, null=True, verbose_name='training description')),
                ('training_certificate', models.FileField(blank=True, null=True, upload_to='employees/training_certificates/', verbose_name='training certificate')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'training',
                'verbose_name_plural': 'trainings',
                'ordering': ['-training_end_date'],
            },
        ),
        migrations.CreateModel(
            name='WorkHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_role', models.CharField(max_length=100, verbose_name='job role')),
                ('job_description', models.TextField(verbose_name='job description')),
                ('start_date', models.DateField(default=datetime.datetime.now, verbose_name='start date')),
                ('end_date', models.DateField(default=datetime.datetime.now, verbose_name='end date')),
                ('reason_for_leaving', models.TextField(blank=True, null=True, verbose_name='reason for leaving')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'work history',
                'verbose_name_plural': 'work Histories',
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Middle name')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('gender', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True, verbose_name='Gender')),
                ('marital_status', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed'), ('Separated', 'Separated'), ('Other', 'Other')], max_length=15, null=True, verbose_name='Marital status')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('nationality', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nationality')),
                ('state_of_origin', models.CharField(blank=True, max_length=30, null=True, verbose_name='State of origin')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone number')),
                ('employee_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Employee ID')),
                ('department', models.CharField(max_length=100, verbose_name='Department/division')),
                ('job_role', models.CharField(blank=True, max_length=100, null=True, verbose_name='Job role')),
                ('joining_date', models.DateField(blank=True, default='2000-01-01', null=True, verbose_name='Joining date')),
                ('employment_type', models.CharField(choices=[('--Select--', '--Select--'), ('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Contract', 'Contract'), ('Intern', 'Intern'), ('Volunteer', 'Volunteer'), ('Temporary', 'Temporary'), ('Seasonal', 'Seasonal'), ('Freelance', 'Freelance'), ('Remote', 'Remote'), ('Disabled', 'Disabled'), ('Other', 'Other')], max_length=100, verbose_name='Employment type')),
                ('employment_status', models.CharField(choices=[('--Select--', '--Select--'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Suspended', 'Suspended'), ('Terminated', 'Terminated'), ('Resigned', 'Resigned'), ('Retired', 'Retired'), ('Deceased', 'Deceased'), ('On Leave', 'On Leave'), ('On Training', 'On Training'), ('On Probation', 'On Probation'), ('Other', 'Other')], max_length=20, verbose_name='Employment status')),
                ('designation', models.CharField(choices=[('--Select--', '--Select--'), ('Employee', 'Employee'), ('Intern', 'Intern'), ('Trainee', 'Trainee'), ('Associate', 'Associate'), ('Assistant', 'Assistant'), ('Officer', 'Officer'), ('Analyst', 'Analyst'), ('Coordinator', 'Coordinator'), ('Specialist', 'Specialist'), ('Consultant', 'Consultant'), ('Advisor', 'Advisor'), ('Supervisor', 'Supervisor'), ('Manager', 'Manager'), ('Director', 'Director'), ('Executive', 'Executive'), ('President', 'President'), ('CEO', 'CEO'), ('CFO', 'CFO'), ('CTO', 'CTO'), ('CIO', 'CIO'), ('COO', 'COO'), ('Chairman', 'Chairman'), ('Board Member', 'Board Member'), ('Other', 'Other')], max_length=30, verbose_name='Designation')),
                ('level', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Entry-level', 'Entry-level'), ('Mid-level', 'Mid-level'), ('Senior-level', 'Senior-level'), ('Executive', 'Executive'), ('Top-level', 'Top-level'), ('Other', 'Other')], max_length=30, null=True, verbose_name='Level')),
                ('last_promotion_date', models.DateField(blank=True, null=True, verbose_name='Last promotion date')),
                ('next_promotion_date', models.DateField(blank=True, null=True, verbose_name='Next promotion date')),
                ('salary', models.IntegerField(blank=True, null=True, verbose_name='Salary')),
                ('emergency_contacts', models.TextField(null=True, verbose_name='Emergency contacts')),
                ('termination_resignation_date', models.DateField(blank=True, null=True, verbose_name='Date of termination/resignation')),
                ('highest_qualification', models.CharField(blank=True, max_length=100, null=True, verbose_name='Highest qualification')),
                ('highest_certificate', models.FileField(blank=True, null=True, upload_to='employees/highest_certificates/', verbose_name='Highest certificate')),
                ('employment_letter', models.FileField(blank=True, null=True, upload_to='employees/employment_letters/', verbose_name='Employment letter')),
                ('skills_qualifications', models.TextField(blank=True, null=True, verbose_name='Skills/qualifications')),
                ('next_of_kin_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of kin name')),
                ('next_of_kin_relationship', models.CharField(blank=True, choices=[('--Select--', '--Select--'), ('Spouse', 'Spouse'), ('Child', 'Child'), ('Parent', 'Parent'), ('Sibling', 'Sibling'), ('Relative', 'Relative'), ('Friend', 'Friend'), ('Other', 'Other')], max_length=100, null=True, verbose_name='Next of kin relationship')),
                ('next_of_kin_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Next of kin phone number')),
                ('next_of_kin_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of kin address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('profile_picture', models.ImageField(blank=True, default='default_picture.png', null=True, upload_to='adminuser/', verbose_name='Profile picture')),
                ('is_admin', models.BooleanField(default=True, help_text='Designates whether the user can log into this admin site.', verbose_name='Admin status')),
                ('is_superuser', models.BooleanField(default=True, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('adminuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='administrator', to='employees.adminuser')),
            ],
            options={
                'verbose_name': 'Administrator',
                'verbose_name_plural': 'Admins',
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
